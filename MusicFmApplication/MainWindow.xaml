<metro:MetroWindow x:Class="MusicFmApplication.MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                   xmlns:behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                   xmlns:lex="http://schemas.root-project.org/xaml/presentation"
                   xmlns:cvt="clr-namespace:CustomControlResources.Converter;assembly=CustomControlResources"
                   xmlns:cc="clr-namespace:CustomControlResources;assembly=CustomControlResources"
                   xmlns:mdl="clr-namespace:Service.Model;assembly=Service"
                   xmlns:sys="clr-namespace:System;assembly=mscorlib"
                   x:Name="Root"
                   Icon="{DynamicResource LogoIco32}" ShowIconOnTitleBar="False"
                   Title="{lex:LocText MusicFmApplication:English:MusicFm}" 
                   ResizeMode="CanMinimize" AllowsTransparency="True" Background="#99FFFFFF"
                   Height="480"  Width="320">
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml"/>
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro.Resources;component/Icons.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CustomControlResources;component/ImageResource.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/CustomControlResources;component/WeatherImagesResource.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/CustomControlResources;component/StyleResource.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/CustomControlResources;component/ControlStyleResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <cvt:WeatherImageSourceConverter x:Key="Num2Image" />
            <cvt:NullToBoolConverter x:Key="Null2Bool"/>
            <cvt:InverseNullToVisibilityConveter x:Key="IvsNull2Vsby"/>
            <cvt:NullToVisibility x:Key="Null2Vsby"/>
            <BooleanToVisibilityConverter x:Key="Bool2Visbility"/>
            <cvt:InverseBoolToVisibilityConverter x:Key="IvsBooltVsby"/>
            <cvt:TimeSpanToStringConverter x:Key="Time2Str"/>
            <cvt:NumberToVisibilityConverter x:Key="Num2Visbility"/>
            <cvt:InverseNumberToVisibilityConverter x:Key="IvsNum2Vsbty"/>
            <cvt:MultiplyNumberConverter x:Key="MultiplyNum"/>
            <cvt:LyricHighLightConverter x:Key="LrcHighLight"/>
            <cvt:EqualiencyToVisibilityConverter x:Key="Equ2Vsbty"/>
            <cvt:EqualiencyConverter x:Key="EquCvt"/>
            <cvt:NumberToBoolConverter x:Key="Num2Bool"/>
            <cvt:PercentageToDecimalConverter x:Key="Pct2Dcml" />
            <cvt:NumberToProgressState x:Key="Num2Pgs"/>
            <!--<ObjectDataProvider x:Key="CrtSongNotNull" ObjectType="{x:Type cc:BooleanClass}" MethodName="NotNull" >
                <ObjectDataProvider.MethodParameters>
                    <Binding ElementName="Root" Path="ViewModel.CurrentSong"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>-->

            <Style TargetType="Grid" x:Key="ChannelCell">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                            <GradientStop Color="#aa3a3a3a" Offset="0.0" />
                            <GradientStop Color="#aa121212" Offset="1" /> 
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Margin" Value="3" />
                <Setter Property="Width" Value="95"/>
                <Setter Property="Height" Value="25"/>
            </Style>
            
        </ResourceDictionary>
    </Window.Resources>

    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="{Binding ElementName=Root, Path=ViewModel.DownloadProgress, Converter={StaticResource Num2Pgs}}"
                         ProgressValue="{Binding ElementName=Root, Path=ViewModel.DownloadProgress, Converter={StaticResource Pct2Dcml}}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo ImageSource="{StaticResource Pause32}" DismissWhenClicked="True"
                                 Command="{Binding ElementName=Root, Path=ViewModel.MediaManager.PausePlayerCommand}"
                                 IsEnabled="{Binding ElementName=TmbBtnNext, Path=IsEnabled}"
                                 Visibility="{Binding ElementName=Root, Path=ViewModel.MediaManager.IsPlaying, Converter={StaticResource Bool2Visbility}}"/>
                <ThumbButtonInfo ImageSource="{StaticResource Play32}" DismissWhenClicked="True"
                                 Command="{Binding ElementName=Root, Path=ViewModel.MediaManager.StartPlayerCommand}"
                                 IsEnabled="{Binding ElementName=TmbBtnNext, Path=IsEnabled}"
                                 Visibility="{Binding ElementName=Root, Path=ViewModel.MediaManager.IsPlaying, Converter={StaticResource IvsBooltVsby}}"/>
                <ThumbButtonInfo ImageSource="{StaticResource Heart32}"
                                 Command="{Binding ElementName=Root, Path=ViewModel.LikeSongCommand}"
                                 IsEnabled="{Binding ElementName=TmbBtnNext, Path=IsEnabled}"/>
                <ThumbButtonInfo ImageSource="{StaticResource Delete32}" 
                                 Command="{Binding ElementName=Root, Path=ViewModel.LikeSongCommand}"
                                 CommandParameter="1"
                                 IsEnabled="{Binding ElementName=TmbBtnNext, Path=IsEnabled}"/>
                <ThumbButtonInfo ImageSource="{StaticResource Next32}"  x:Name="TmbBtnNext"
                                 Command="{Binding ElementName=Root, Path=ViewModel.NextSongCommand}"
                                 IsEnabled="{Binding ElementName=Root, Path=ViewModel.CurrentSong, Converter={StaticResource Null2Bool}}"/>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>

    <metro:MetroWindow.WindowCommands>
        <metro:WindowCommands DataContext="{Binding ElementName=Root}">
            <Button Command="{Binding ViewModel.ShowWeatherDetailCommmand}">
                <Button.Content>
                    <Image ToolTip="{Binding ElementName=WeatherDetail, Path=WeatherData.WeatherImageTitle}" Width="24" Height="24">
                        <Image.Source>
                            <MultiBinding Converter="{StaticResource Num2Image}" ConverterParameter="S">
                                <Binding ElementName="WeatherDetail" Path="WeatherData.WeatherImage"/>
                                <Binding Path="Resources"/>
                            </MultiBinding>
                        </Image.Source>
                    </Image>
                </Button.Content>
            </Button>
            <Button Command="{Binding ViewModel.TogglePlayerDetailCommand}">
                <Button.Content>
                    <cc:ColorlizeImage Image="{StaticResource Wave32}" Color="{StaticResource AccentSelectedColorBrush}" 
                                       Width="16" Height="16"/>
                </Button.Content>
            </Button>
        </metro:WindowCommands>
    </metro:MetroWindow.WindowCommands>

    <metro:MetroWindow.Flyouts>
        <metro:FlyoutsControl>
            <metro:Flyout DataContext="{Binding ElementName=Root}" Background="#CC000000"
                          Header="{lex:LocText MusicFmApplication:English:WeatherDetail}"
                          IsOpen="{Binding ViewModel.IsShowWeatherDetail }">
                <cc:WeatherDetail x:Name="WeatherDetail" WeatherData="{Binding ElementName=Root, Path=ViewModel.WeatherMgr.WeatherData}"/>
            </metro:Flyout>
            <metro:Flyout DataContext="{Binding ElementName=Root}" Background="#CC000000" Position="Right"
                          Header="{lex:LocText MusicFmApplication:English:MyCentralRoom}"
                          IsOpen="{Binding ViewModel.IsShowPlayerDetail }">
                <TabControl Width="230">
                    <TabItem Header="{lex:LocText MusicFmApplication:English:DoubanFm}"
                             metro:ControlsHelper.HeaderFontSize="18">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!--Login Btn-->
                            <Grid Grid.Row="0" Margin="0,0,0,10">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ViewModel.Account.IsShowLoginBox}" Value="False">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Height" From="0" To="25" Duration="0:0:0.3"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Height" From="25" To="0" Duration="0:0:0.3"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <cc:ImageButton Command="{Binding ViewModel.Account.ShowLoginBoxCommand}">
                                    <cc:ImageButton.Style>
                                        <Style TargetType="cc:ImageButton">
                                            <Setter Property="Template" Value="{StaticResource ImageButtonTemplate}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </cc:ImageButton.Style>
                                    <cc:ImageButton.Image>
                                        <Image Source="{StaticResource User48}" Height="20" Width="20"/>
                                    </cc:ImageButton.Image>
                                    <TextBlock Margin="5,2,0,0" Foreground="WhiteSmoke"
                                               Text="{Binding ViewModel.Account.UserName}"/>
                                </cc:ImageButton>
                            </Grid>
                            <!--Loging Box-->
                            <Grid Grid.Row="1" Height="0" >
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ViewModel.Account.IsShowLoginBox}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Height" From="0" To="95" Duration="0:0:0.3"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Height" From="95" To="0" Duration="0:0:0.3"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <ComboBox SelectedIndex="0" Grid.Row="0" Grid.Column="0" Height="25" x:Name="CboxAccountType" >
                                    <ComboBoxItem Content="{lex:LocText MusicFmApplication:English:DoubanAct}" 
                                                  DataContext="{x:Static mdl:AccountType.DoubanFm}" />
                                    <ComboBoxItem Content="{lex:LocText MusicFmApplication:English:TencentQq}" 
                                                  DataContext="{x:Static mdl:AccountType.TencentQq}"/>
                                    <ComboBoxItem Content="{lex:LocText MusicFmApplication:English:SinaWeibo}" 
                                                  DataContext="{x:Static mdl:AccountType.Weibo}"/>
                                    <ComboBoxItem Content="MSN" 
                                                  DataContext="{x:Static mdl:AccountType.Msn}"/>
                                </ComboBox>
                                <TextBox metro:TextboxHelper.Watermark="Email" 
                                         metro:TextboxHelper.ClearTextButton="True" 
                                         Grid.Row="1" Grid.Column="0" Height="25"
                                         Text="{Binding ViewModel.Account.UserName}"/>
                                <PasswordBox metro:TextboxHelper.Watermark="{lex:LocText MusicFmApplication:English:Password}"
                                              metro:TextboxHelper.ClearTextButton="True" 
                                               Grid.Row="2" Grid.Column="0" Margin="0,2" Height="25"
                                                cc:PasswordHelper.Password="{Binding ViewModel.Account.Passwrod, Mode=TwoWay}" />
                                <cc:ImageButton HorizontalAlignment="Center" VerticalAlignment="Center"
                                                Grid.Row="0" Grid.Column="1" Grid.RowSpan="3"
                                                ToolTip="{lex:LocText MusicFmApplication:English:Login}"
                                                Command="{Binding ViewModel.Account.LoginCommand}"
                                                CommandParameter="{Binding ElementName=CboxAccountType, Path=SelectedItem.DataContext}">
                                    <cc:ImageButton.Image>
                                        <Image Source="{StaticResource Login64}" Height="56" Width="56"/>
                                    </cc:ImageButton.Image>
                                </cc:ImageButton>
                            </Grid>
                            <!--Error Msg-->
                            <StackPanel Grid.Row="2"
                                        Visibility="{Binding ViewModel.Account.IsShowLoginBox, Converter={StaticResource Bool2Visbility}}">
                                <TextBlock Foreground="DarkRed" 
                                           ToolTip="{Binding ViewModel.Account.Feedback}"
                                           Text="{Binding ViewModel.Account.Feedback}"/>
                            </StackPanel>
                            <!--Channel List-->
                            <ScrollViewer Grid.Row="3">
                                <ItemsControl ItemsSource="{Binding ViewModel.Channels}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Left"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Style="{StaticResource ChannelCell}">
                                                <cc:ImageButton Template="{StaticResource ImageButtonTemplate}"
                                                                Command="{Binding ElementName=Root, Path=ViewModel.SetChannelCommand}"
                                                                CommandParameter="{Binding Id}"
                                                                ToolTip="{Binding Name}">
                                                    <cc:ImageButton.Image>
                                                        <cc:GifImage Width="11" Height="11" Margin="0,0,3,0" Source="{StaticResource CrtChelStr}">
                                                            <cc:GifImage.Visibility>
                                                                <MultiBinding Converter="{StaticResource Equ2Vsbty}">
                                                                    <Binding Path=".Id"/>
                                                                    <Binding ElementName="Root" Path="ViewModel.CurrentChannel.Id" />
                                                                </MultiBinding>
                                                            </cc:GifImage.Visibility>
                                                        </cc:GifImage>
                                                    </cc:ImageButton.Image>
                                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Style.Triggers>
                                                                    <DataTrigger Value="{x:Static cc:BooleanClass.True}">
                                                                        <DataTrigger.Binding>
                                                                            <MultiBinding Converter="{StaticResource EquCvt}">
                                                                                <Binding Path=".Id"/>
                                                                                <Binding ElementName="Root" Path="ViewModel.CurrentChannel.Id"/>
                                                                            </MultiBinding>
                                                                        </DataTrigger.Binding>
                                                                        <Setter Property="Foreground" Value="SpringGreen"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                                <Setter Property="Foreground" Value="WhiteSmoke"/>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </cc:ImageButton>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </Grid>
                    </TabItem>
                </TabControl>
            </metro:Flyout>
        </metro:FlyoutsControl>
    </metro:MetroWindow.Flyouts>

    <Grid DataContext="{Binding ElementName=Root, Path=ViewModel}">
        <!--Main Content Panel-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="2"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <!--1 Progress Indicator-->
            <DockPanel Grid.Row="0" Height="20">
                <metro:ProgressIndicator Height="3" DockPanel.Dock="Top" VerticalAlignment="Top"
                                         ProgressColor="{DynamicResource AccentColorBrush}"
                                         Width="{Binding ElementName=Root, Path=Width}"
                                         Visibility="{Binding IsBuffering, Converter={StaticResource Bool2Visbility}}"/>
            </DockPanel>
            <!--2 Song Photo & Lyric-->
            <Grid Grid.Row="1" VerticalAlignment="Center">
                <MediaElement x:Name="Player" LoadedBehavior="Manual" Source="{Binding CurrentSong.Url}"/>
                <metro:ProgressRing IsActive="True" VerticalAlignment="Center" HorizontalAlignment="Center"
                                    Width="120" Height="120"
                                    Visibility="{Binding Path=CurrentSong, Converter={StaticResource IvsNull2Vsby}}"/>
                <Grid Visibility="{Binding Path=CurrentSong, Converter={StaticResource Null2Vsby}}">
                    <cc:ImageButton Command="{Binding ToggleLyricDisplayCommand}">
                        <cc:ImageButton.Image>
                            <StackPanel Orientation="Vertical">
                                <Image x:Name="AlbumPicture" Stretch="Fill" HorizontalAlignment="Center"
                                       Source="{Binding CurrentSong.Picture}">
                                        <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Width">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource MultiplyNum}" ConverterParameter="0.75">
                                                        <Binding ElementName="Root" Path="Width"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Height" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Width}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Opacity" Value=".8"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <cc:ControlReflection Host="{Binding ElementName=AlbumPicture}"
                                                      ReflectionPercent=".3"
                                                      Opacity=".9"/>
                            </StackPanel>
                        </cc:ImageButton.Image>
                    </cc:ImageButton>

                    <cc:ImageButton Visibility="Collapsed"
                                    Command="{Binding ToggleLyricDisplayCommand}">
                        <cc:ImageButton.Style>
                            <Style TargetType="cc:ImageButton" BasedOn="{StaticResource {x:Type cc:ImageButton}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDisylayLyric}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </cc:ImageButton.Style>
                        <Grid Background="#CC000000" 
                              Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}, Path=ActualWidth}"
                              Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}, Path=ActualHeight}">
                            <ScrollViewer x:Name="LrcContaner" IsHitTestVisible="False"
                                          HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                <ItemsControl ItemsSource="{Binding Path=Lyric.Content}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel IsItemsHost="True" Orientation="Vertical" HorizontalAlignment="Center"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock TextAlignment="Center"  TextWrapping="Wrap" Margin="10,3" Text="{Binding Value}" >
                                                <TextBlock.Foreground>
                                                    <MultiBinding Converter="{StaticResource LrcHighLight}">
                                                        <Binding Path="Key"/>
                                                        <Binding ElementName="Root" Path="ViewModel.CurrnetLrcLine.Value"/>
                                                    </MultiBinding>
                                                </TextBlock.Foreground>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </Grid>
                    </cc:ImageButton>
                </Grid>
            </Grid>
            <!--3 Song Title & Album Title-->
            <StackPanel Grid.Row="2"
                        Orientation="Vertical">
                <StackPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{StaticResource AccentColorBrush2}"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                    </Style>
                </StackPanel.Resources>
                <TextBlock Text="{Binding CurrentSong.Title}" FontSize="14" Margin="0,3" />
                <TextBlock FontSize="11"
                           Visibility="{Binding Path=CurrentSong, Converter={StaticResource Null2Vsby}}">
                        <Run Text="{Binding Path=CurrentSong.Artist}"/>
                        <Run Text=" &lt;"/>
                        <Run Text="{Binding CurrentSong.AlbumTitle}"/>
                        <Run Text="&gt;"/>
                </TextBlock>
            </StackPanel>
            <!--3 Control Btns-->
            <Grid Grid.Row="3"
                  IsEnabled="{Binding CurrentSong, Converter={StaticResource Null2Bool}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource MetroCircleButtonStyle}">
                        <Setter Property="Height" Value="52"/>
                        <Setter Property="Width" Value="52"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Account.AccountInfo}" Value="{x:Null}">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="SongCtrlBtnImg" TargetType="cc:ColorlizeImage">
                        <Setter Property="Height" Value="28"/>
                        <Setter Property="Width" Value="28"/>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Color" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Color" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <Button Grid.Column="0" Command="{Binding LikeSongCommand}">
                    <cc:ColorlizeImage Image="{StaticResource Heart96}" >
                        <cc:ColorlizeImage.Style>
                            <Style BasedOn="{StaticResource SongCtrlBtnImg}" TargetType="cc:ColorlizeImage">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentSong.Like}" Value="1">
                                        <Setter Property="Color" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </cc:ColorlizeImage.Style>
                    </cc:ColorlizeImage>
                </Button>
                <Button Grid.Column="1"
                        Command="{Binding LikeSongCommand}"
                        CommandParameter="1">
                    <cc:ColorlizeImage Image="{StaticResource Delete96}" Style="{StaticResource SongCtrlBtnImg}"/>
                </Button>
                <Button Grid.Column="2" 
                        Command="{Binding NextSongCommand}"
                        IsEnabled="{Binding SongList.Count, Converter={StaticResource Num2Bool}}">
                    <cc:ColorlizeImage Image="{StaticResource Next96}" Style="{StaticResource SongCtrlBtnImg}"/>
                </Button>
            </Grid>
            <!--Playing Progress Time Line-->
            <Grid Grid.Row="4">
                <Grid.Resources>
                    <Style TargetType="Rectangle">
                        <Setter Property="Height" Value="2"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2"/>
                </Grid.RowDefinitions>
                <Rectangle Grid.Row="0" Fill="Silver" Opacity=".5" Width="{Binding ElementName=Root, Path=Width}"/>

                <Rectangle Grid.Row="0" Fill="{StaticResource AccentColorBrush3}" Opacity=".7" >
                    <Rectangle.Width>
                        <MultiBinding Converter="{StaticResource MultiplyNum}">
                            <MultiBinding.Bindings>
                                <Binding Path="MediaManager.DownloadProgress"/>
                                <Binding ElementName="Root" Path="Width"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Rectangle.Width>
                </Rectangle>

                <Rectangle Grid.Row="0" Fill="{StaticResource AccentColorBrush}" >
                    <Rectangle.Width>
                        <MultiBinding Converter="{StaticResource MultiplyNum}">
                            <MultiBinding.Bindings>
                                <Binding Path="MediaManager.PlayProgress"/>
                                <Binding ElementName="Root" Path="Width"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Rectangle.Width>
                </Rectangle>
            </Grid>
            <!--Pause, volume, download btns-->
            <Grid Grid.Row="5" VerticalAlignment="Bottom" Margin="0,8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style TargetType="cc:ImageButton">
                        <Setter Property="Template" Value="{StaticResource ImageButtonTemplate}"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Height" Value="18"/>
                        <Setter Property="Width" Value="18"/>
                    </Style>
                    <Style TargetType="cc:ColorlizeImage">
                        <Setter Property="Color" Value="{StaticResource AccentColorBrush}"/>
                        <Setter Property="Height" Value="{Binding Path=Height, RelativeSource={RelativeSource FindAncestor, AncestorType=cc:ImageButton}}"/>
                        <Setter Property="Width" Value="{Binding Path=Width, RelativeSource={RelativeSource FindAncestor, AncestorType=cc:ImageButton}}"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Color">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource AccentColor2}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Color">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource AccentColor3}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MediaManager.IsPlaying}" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource AccentColorBrush3}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <cc:ImageButton Grid.Column="0"
                                IsEnabled="{Binding CurrentSong, Converter={StaticResource Null2Bool}}"
                                Visibility="{Binding MediaManager.IsPlaying, Converter={StaticResource IvsBooltVsby}}"
                                Command="{Binding MediaManager.StartPlayerCommand}"
                                Width="14">
                    <cc:ImageButton.Image>
                        <cc:ColorlizeImage Image="{StaticResource Play32}"/>
                    </cc:ImageButton.Image>
                </cc:ImageButton>
                <cc:ImageButton Grid.Column="0"
                                Command="{Binding MediaManager.PausePlayerCommand}"
                                Visibility="{Binding MediaManager.IsPlaying, Converter={StaticResource Bool2Visbility}}">
                    <cc:ImageButton.Image>
                        <cc:ColorlizeImage Image="{StaticResource Pause32}"/>
                    </cc:ImageButton.Image>
                </cc:ImageButton>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <TextBlock Text="{Binding MediaManager.Position, Mode=OneWay, Converter={StaticResource Time2Str}}"/>
                    <TextBlock Text=" / "/>
                    <TextBlock Text="{Binding MediaManager.SongLength, Mode=OneWay, Converter={StaticResource Time2Str}}"/>
                </StackPanel>
                <cc:ImageButton Grid.Column="2" HorizontalAlignment="Right"
                                Visibility="{Binding MediaManager.Volume, Converter={StaticResource Num2Visbility}}"
                                Command="{Binding MediaManager.MuteCommand}">
                    <cc:ImageButton.Image>
                        <cc:ColorlizeImage Image="{StaticResource Volume32}"/>
                    </cc:ImageButton.Image>
                </cc:ImageButton>
                <cc:ImageButton Grid.Column="2" HorizontalAlignment="Right"
                                Visibility="{Binding MediaManager.Volume, Converter={StaticResource IvsNum2Vsbty}}"
                                Command="{Binding MediaManager.MuteCommand}">
                    <cc:ImageButton.Image>
                        <cc:ColorlizeImage Image="{StaticResource Mute32}"/>
                    </cc:ImageButton.Image>
                </cc:ImageButton>
                <Slider Grid.Column="3" Width="70" Height="5" 
                        Minimum="0" Maximum="1" LargeChange=".1"
                        HorizontalAlignment="Left" Style="{StaticResource FlatSlider}"
                        Value="{Binding MediaManager.Volume}"/>
                <!--Download Btn & Download Progress Text-->
                <StackPanel Grid.Column="4" Orientation="Horizontal" HorizontalAlignment="Center">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=BtnOpenFolad, Path=Visibility}" 
                                             Value="{x:Static Visibility.Visible}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <cc:ImageButton IsEnabled="{Binding CurrentSong, Converter={StaticResource Null2Bool}}"
                                    Command="{Binding DownloadSongCommand}"
                                    Visibility="{Binding IsDownlading, Converter={StaticResource IvsBooltVsby}}">
                        <cc:ImageButton.Image>
                            <cc:ColorlizeImage Image="{StaticResource Download32}"/>
                        </cc:ImageButton.Image>
                    </cc:ImageButton>
                    <!--Download Progress Text-->
                    <TextBlock HorizontalAlignment="Center"
                               Text="{Binding DownloadProgress, StringFormat='{}{0}%'}"
                               Visibility="{Binding IsDownlading, Converter={StaticResource Bool2Visbility}}"/>
                </StackPanel>
                <!--Open Download Folder Btn-->
                <cc:ImageButton Grid.Column="4" x:Name="BtnOpenFolad"
                                Command="{Binding OpenDownloadFolderCommand}">
                    <cc:ImageButton.Visibility>
                        <MultiBinding Converter="{StaticResource Equ2Vsbty}" ConverterParameter="100">
                            <Binding Path="DownloadProgress"/>
                        </MultiBinding>
                    </cc:ImageButton.Visibility>
                    <cc:ImageButton.Image>
                        <cc:ColorlizeImage Image="{StaticResource Folder32}"/>
                    </cc:ImageButton.Image>
                </cc:ImageButton>
            </Grid>
        </Grid>
    </Grid>

</metro:MetroWindow>