<metro:MetroWindow x:Class="MusicFm.MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                   xmlns:lex="http://schemas.root-project.org/xaml/presentation"
                   xmlns:cvt="clr-namespace:CustomControlResources.Converter;assembly=CustomControlResources"
                   xmlns:cc="clr-namespace:CustomControlResources;assembly=CustomControlResources"
                   xmlns:presentOpti="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                   xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                   xmlns:local="clr-namespace:MusicFm.Controls"
                   xmlns:helper="clr-namespace:MusicFm.Helper"
                   x:Name="Root"
                   Icon="{DynamicResource Music48}" ShowIconOnTitleBar="False"  
                   WindowTransitionsEnabled="False"
                   TitleForeground="WhiteSmoke"
                   Title="{lex:LocText Localization:English:MusicFm}" 
                   ResizeMode="CanMinimize" AllowsTransparency="True"
                   Height="480" Width="320">
    <metro:MetroWindow.Background>
        <SolidColorBrush Color="{Binding ElementName=Root, Path=BackgroundColor}"/>
    </metro:MetroWindow.Background>

    <metro:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/CustomControlResources;component/ImageResource.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/CustomControlResources;component/WeatherImagesResource.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/CustomControlResources;component/ControlStyleResources.xaml"/>
                <!--Style Rescorce Dictionary-->
                <ResourceDictionary>
                    <Style TargetType="cc:ImageToggleButton" BasedOn="{StaticResource {x:Type cc:ImageToggleButton}}" x:Key="WdsCmdBtn">
                        <Setter Property="Opacity" Value=".5"/>
                        <Setter Property="Margin" Value="10 0"/>
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To=".5" Duration="0:0:.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                    <PowerEase x:Key="Smooth" Power="3" presentOpti:Freeze="True"/>
                    <SolidColorBrush x:Key="BlackBrush" Color="{StaticResource BlackColor}" />
                </ResourceDictionary>
                <!--Animation Stroybard Resource Dictionary-->
                <ResourceDictionary>
                    <Storyboard x:Key="BackgroundColorStoryboard">
                        <ColorAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="BackgroundColor" Duration="0:0:5" EasingFunction="{StaticResource Smooth}"/>
                    </Storyboard>
                    <Storyboard x:Key="AlbumPictureFadeInStoryboard">
                        <DoubleAnimation Storyboard.TargetName="AlbumPicture" Storyboard.TargetProperty="Opacity" From="0"  To ="1" Duration="0:0:.5"/>
                    </Storyboard>
                    <Storyboard x:Key="WindowFadeoutStoryboard">
                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To ="0" Duration="0:0:.9"/>
                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Height" To="0" Duration="0:0:.9"/>
                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Width" To="0" Duration="0:0:.9"/>
                    </Storyboard>
                    <Storyboard x:Key="WindowFadeInStoryboard">
                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" From="0" To ="1" Duration="0:0:2"/>
                    </Storyboard>
                </ResourceDictionary>
                <!--Converter Resource Dictionary-->
                <ResourceDictionary>
                    <cvt:WeatherImageSourceConverter x:Key="Num2Image" />
                    <cvt:NullToBoolConverter x:Key="Null2Bool"/>
                    <cvt:InverseNullToVisibilityConveter x:Key="IvsNull2Vsby"/>
                    <cvt:NullToVisibility x:Key="Null2Vsby"/>
                    <BooleanToVisibilityConverter x:Key="Bool2Visbility"/>
                    <cvt:InverseBoolToVisibilityConverter x:Key="IvsBooltVsby"/>
                    <cvt:TimeSpanToStringConverter x:Key="Time2Str"/>
                    <cvt:NumberToVisibilityConverter x:Key="Num2Visbility"/>
                    <cvt:InverseNumberToVisibilityConverter x:Key="IvsNum2Vsbty"/>
                    <cvt:MultiplyNumberConverter x:Key="MultiplyNum"/>
                    <cvt:EqualiencyToVisibilityConverter x:Key="Equ2Vsbty"/>
                    <cvt:EqualiencyConverter x:Key="EquCvt"/>
                    <cvt:NumberToBoolConverter x:Key="Num2Bool"/>
                    <cvt:PercentageToDecimalConverter x:Key="Pct2Dcml" />
                    <cvt:NumberToProgressState x:Key="Num2Pgs"/>
                    <helper:LocalTextConverter x:Key="LocTxtCvt"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </metro:MetroWindow.Resources>

    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="{Binding ElementName=Root, Path=ViewModel.DownloadProgress, Converter={StaticResource Num2Pgs}}"
                         ProgressValue="{Binding ElementName=Root, Path=ViewModel.DownloadProgress, Converter={StaticResource Pct2Dcml}}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo ImageSource="{StaticResource Pause32}" DismissWhenClicked="True"
                                 Command="{Binding ElementName=Root, Path=ViewModel.MediaManager.PauseResumePlayerCmd}"
                                 IsEnabled="{Binding ElementName=TmbBtnNext, Path=IsEnabled}"
                                 Visibility="{Binding ElementName=Root, Path=ViewModel.MediaManager.IsPlaying, Converter={StaticResource Bool2Visbility}}"/>
                <ThumbButtonInfo ImageSource="{StaticResource Play32}" DismissWhenClicked="True"
                                 Command="{Binding ElementName=Root, Path=ViewModel.MediaManager.PauseResumePlayerCmd}"
                                 IsEnabled="{Binding ElementName=TmbBtnNext, Path=IsEnabled}"
                                 Visibility="{Binding ElementName=Root, Path=ViewModel.MediaManager.IsPlaying, Converter={StaticResource IvsBooltVsby}}"/>
                <ThumbButtonInfo ImageSource="{StaticResource Heart32}"
                                 Command="{Binding ElementName=Root, Path=ViewModel.LikeSongCmd}"
                                 IsEnabled="{Binding ElementName=TmbBtnNext, Path=IsEnabled}"/>
                <ThumbButtonInfo ImageSource="{StaticResource Delete32}" 
                                 Command="{Binding ElementName=Root, Path=ViewModel.LikeSongCmd}"
                                 CommandParameter="1"
                                 IsEnabled="{Binding ElementName=TmbBtnNext, Path=IsEnabled}"/>
                <ThumbButtonInfo ImageSource="{StaticResource Next32}"  x:Name="TmbBtnNext"
                                 Command="{Binding ElementName=Root, Path=ViewModel.NextSongCmd}"
                                 IsEnabled="{Binding ElementName=Root, Path=ViewModel.CurrentSong, Converter={StaticResource Null2Bool}}"/>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>

    <metro:MetroWindow.WindowCommands>
        <metro:WindowCommands DataContext="{Binding ElementName=Root}">
            <cc:ImageToggleButton IsChecked="{Binding ElementName=WeatherFlyout, Path=IsOpen}" Style="{StaticResource WdsCmdBtn}">
                <Image ToolTip="{Binding ElementName=WeatherDetail, Path=WeatherData.WeatherImageTitle}" Width="24" Height="24">
                    <Image.Source>
                        <MultiBinding Converter="{StaticResource Num2Image}" ConverterParameter="S">
                            <Binding ElementName="WeatherDetail" Path="WeatherData.WeatherImage"/>
                            <Binding Path="Resources"/>
                        </MultiBinding>
                    </Image.Source>
                </Image>
            </cc:ImageToggleButton>
            <cc:ImageToggleButton IsChecked="{Binding ElementName=PlayerDetailFlyout, Path=IsOpen}" Style="{StaticResource WdsCmdBtn}">
                <cc:ColorlizeImage Image="{StaticResource Home24}" Color="{StaticResource AccentSelectedColorBrush}" 
                                   Width="20" Height="16"/>
            </cc:ImageToggleButton>
        </metro:WindowCommands>
    </metro:MetroWindow.WindowCommands>
    
    <Window.InputBindings>
        <KeyBinding Command="{Binding ElementName=Root, Path=ViewModel.MediaManager.PauseResumePlayerCmd}" Key="MediaPlayPause"/>
        <KeyBinding Command="{Binding ElementName=Root, Path=ViewModel.NextSongCmd}" Key="MediaNextTrack"/>
        <MouseBinding Gesture="{x:Static cc:MouseWheelGesture.Down}" 
                      Command="{Binding  ElementName=Root, Path=ViewModel.MediaManager.VolumeControlCmd}" 
                      CommandParameter="{x:Static cc:BooleanClass.False}" />
        <MouseBinding Gesture="{x:Static cc:MouseWheelGesture.Up}" 
                      Command="{Binding  ElementName=Root, Path=ViewModel.MediaManager.VolumeControlCmd}" 
                      CommandParameter="{x:Static cc:BooleanClass.True}" />
    </Window.InputBindings>

    <metro:MetroWindow.Flyouts>
        <metro:FlyoutsControl>
            <metro:Flyout DataContext="{Binding ElementName=Root}" Background="#AA000000"
                          Header="{lex:LocText Localization:English:WeatherDetail}"
                          x:Name="WeatherFlyout" Width="230">
                <cc:WeatherDetail x:Name="WeatherDetail" WeatherData="{Binding ElementName=Root, Path=ViewModel.WeatherMgr.WeatherData}"/>
            </metro:Flyout>
            <metro:Flyout DataContext="{Binding ElementName=Root}" 
                          Background="#AA000000" Position="Right"
                          Header="{lex:LocText Localization:English:MyCentralRoom}"
                          metro:ControlsHelper.HeaderFontSize="22"
                          x:Name="PlayerDetailFlyout" 
                          IsOpen="{Binding ViewModel.IsShowPlayerDetail}"
                          VerticalContentAlignment="Stretch">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" Margin="0,0,10,0" HorizontalAlignment="Right">
                        <cc:ImageButton DockPanel.Dock="Right" Margin="10,0,0,0"
                                        Command="{Binding ViewModel.OpenAboutWdCmd}">
                            <cc:ImageButton.Image>
                                <Image Source="{StaticResource About24}" Height="18" Width="18"/>
                            </cc:ImageButton.Image>
                            <cc:ImageButton.ToolTip>
                                <TextBlock>
                                    <Run Text="{lex:LocText Localization:English:About}"/>
                                    <Run Text=" "/>
                                    <Run Text="{lex:LocText Localization:English:MusicFm}"/>
                                </TextBlock>
                            </cc:ImageButton.ToolTip>
                            <cc:ImageButton.Effect>
                                <BlurEffect Radius="0"/>
                            </cc:ImageButton.Effect>
                            <cc:ImageButton.Triggers>
                                <EventTrigger RoutedEvent="cc:ImageButton.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Effect.Radius" To="5" Duration="0:0:0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="cc:ImageButton.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Effect.Radius" To="0" Duration="0:0:0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </cc:ImageButton.Triggers>
                        </cc:ImageButton>
                        <cc:ImageButton DockPanel.Dock="Right" 
                                        ToolTip="{lex:LocText Localization:English:Setting}"
                                        Command="{Binding ViewModel.OpenSettingWindowCmd}">
                            <cc:ImageButton.Image>
                                <Image Source="{StaticResource Setting32}" Height="20" Width="20" Opacity=".6"/>
                            </cc:ImageButton.Image>
                            <cc:ImageButton.RenderTransform>
                                <RotateTransform />
                            </cc:ImageButton.RenderTransform>
                            <cc:ImageButton.Style>
                                <Style TargetType="cc:ImageButton" BasedOn="{StaticResource {x:Type cc:ImageButton}}">
                                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="MouseEnter">
                                            <BeginStoryboard x:Name="AliRotate">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(cc:ImageButton.RenderTransform).(RotateTransform.Angle)" To="-360" Duration="0:0:4" RepeatBehavior="Forever"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="MouseLeave">
                                            <StopStoryboard BeginStoryboardName="AliRotate"/>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </cc:ImageButton.Style>
                        </cc:ImageButton>
                    </DockPanel>
                    <Grid Width="230" Grid.Row="1" Margin="0,10,0,0"
                          Visibility="{Binding ViewModel.OfflineMgt.IsInternetConnected, Converter={StaticResource IvsBooltVsby}}">
                        <local:ChannelsViewer ViewModel="{Binding ViewModel}" Channels="{Binding ViewModel.Channels}" HorizontalAlignment="Center"/>
                    </Grid>
                    
                    <TabControl Width="230" x:Name="ServiceList" Grid.Row="1"
                                ItemsSource="{Binding ViewModel.AvalibleSongServices}"
                                SelectedItem="{Binding ViewModel.SongService}"
                                Visibility="{Binding ViewModel.OfflineMgt.IsInternetConnected, Converter={StaticResource Bool2Visbility}}">
                        <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ViewModel.ChangeSongServiceCmd}"
                                                       CommandParameter="{Binding ElementName=ServiceList, Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->
                        <TabControl.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="WhiteSmoke"/>
                            </Style>
                        </TabControl.Resources>
                        <!--Header-->
                        <TabControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding LocalizeName}" FontSize="14"/>
                            </DataTemplate>
                        </TabControl.ItemTemplate>
                        <!--Content-->
                        <TabControl.ContentTemplate>
                            <DataTemplate>
                                <Grid DataContext="{Binding ElementName=Root}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <!--Login Btn-->
                                    <Grid Grid.Row="0">
                                        <Grid.Style>
                                            <Style TargetType="Grid">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ViewModel.Account.IsShowLoginBox}" Value="False">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="0" To="25" Duration="0:0:0.3"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                        <DataTrigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="25" To="0" Duration="0:0:0.3"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        <cc:ImageButton Command="{Binding ViewModel.Account.ShowLoginBoxCmd}">
                                            <cc:ImageButton.Style>
                                                <Style TargetType="cc:ImageButton" BasedOn="{StaticResource {x:Type cc:ImageButton}}">
                                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value=".8"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </cc:ImageButton.Style>
                                            <cc:ImageButton.Image>
                                                <cc:ColorlizeImage Image="{StaticResource User48}" Height="22" Width="22">
                                                    <cc:ColorlizeImage.Color>
                                                        <SolidColorBrush Color="{Binding ViewModel.MediaManager.SongPictureColor}"/>
                                                    </cc:ColorlizeImage.Color>
                                                </cc:ColorlizeImage>
                                            </cc:ImageButton.Image>
                                            <Grid>
                                                <TextBlock Margin="5,2,0,0" Text="{Binding ViewModel.Account.AccountInfo.UserName}"
                                                           Visibility="{Binding ViewModel.Account.AccountInfo, Converter={StaticResource Null2Vsby}}"/>
                                                <TextBlock Margin="5,2,0,0" Text="{lex:LocText Localization:English:Login}"
                                                           Visibility="{Binding ViewModel.Account.AccountInfo, Converter={StaticResource IvsNull2Vsby}}"/>
                                            </Grid>
                                        </cc:ImageButton>
                                    </Grid>
                                    <!--Loging Box-->
                                    <Grid Grid.Row="1" Height="0" >
                                        <Grid.Style>
                                            <Style TargetType="Grid">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ViewModel.Account.IsShowLoginBox}" Value="True">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="0" To="95" Duration="0:0:0.3"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                        <DataTrigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="95" To="0" Duration="0:0:0.3"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="2*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <ComboBox Grid.Row="0" Grid.Column="0" Height="25"
                                                  ItemsSource="{Binding ViewModel.SongService.AvaliableAccountTypes}"
                                                  SelectedItem="{Binding ViewModel.Account.AccountType, Mode=TwoWay}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate >
                                                    <TextBlock Text="{Binding Converter={StaticResource LocTxtCvt}}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <TextBox metro:TextboxHelper.Watermark="Email" 
                                                 metro:TextboxHelper.ClearTextButton="True" 
                                                 Grid.Row="1" Grid.Column="0" Height="25"
                                                 Text="{Binding ViewModel.Account.UserName}"/>
                                        <PasswordBox metro:TextboxHelper.Watermark="{lex:LocText Localization:English:Password}"
                                                     metro:TextboxHelper.ClearTextButton="True" 
                                                     Grid.Row="2" Grid.Column="0" Margin="0,2" Height="25"
                                                     cc:PasswordHelper.Password="{Binding ViewModel.Account.Passwrod, Mode=TwoWay}" />
                                        <cc:ImageButton HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        Grid.Row="0" Grid.Column="1" Grid.RowSpan="3"
                                                        ToolTip="{lex:LocText Localization:English:Login}"
                                                        Command="{Binding ViewModel.Account.LoginCmd}">
                                            <cc:ImageButton.Image>
                                                <cc:ColorlizeImage Image="{StaticResource User48}" Height="56" Width="56">
                                                    <cc:ColorlizeImage.Color>
                                                        <SolidColorBrush Color="{Binding ViewModel.MediaManager.SongPictureColor}"/>
                                                    </cc:ColorlizeImage.Color>
                                                </cc:ColorlizeImage>
                                            </cc:ImageButton.Image>
                                        </cc:ImageButton>
                                        <!--Close Btn-->
                                        <cc:ImageButton HorizontalAlignment="Right" VerticalAlignment="Top"
                                                        Grid.Row="0" Grid.Column="1"
                                                        Width="17" Height="17"
                                                        Command="{Binding ViewModel.Account.HideLoginBoxCmd}">
                                            <cc:ColorlizeImage Image="{StaticResource Close20}" Width="17" Height="17"/>
                                        </cc:ImageButton>
                                    </Grid>
                                    <!--Error Msg-->
                                    <StackPanel Grid.Row="2"
                                                Visibility="{Binding ViewModel.Account.IsShowLoginBox, Converter={StaticResource Bool2Visbility}}">
                                        <TextBlock Foreground="DarkRed" 
                                                   ToolTip="{Binding ViewModel.Account.Feedback}"
                                                   Text="{Binding ViewModel.Account.Feedback}"/>
                                    </StackPanel>
                                    <!--Search box-->
                                    <StackPanel Grid.Row="3">
                                        <TextBox Style="{StaticResource SearchMetroTextBox}"
                                                 x:Name="SearchBox"
                                                 metro:TextboxHelper.Watermark="{lex:LocText Localization:English:Search}"
                                                 metro:TextboxHelper.SelectAllOnFocus="True"
                                                 metro:TextboxHelper.ButtonCommand="{Binding ViewModel.SearchCmd, Mode=OneWay}">
                                            <TextBox.InputBindings>
                                                <KeyBinding Key="Enter" 
                                                            Command="{Binding ViewModel.SearchCmd}"
                                                            CommandParameter="{Binding ElementName=SearchBox, Path=Text}" />
                                            </TextBox.InputBindings>
                                        </TextBox>
                                    </StackPanel>
                                    <!--Artist Viewer-->
                                    <Grid Grid.Row="4"
                                          Visibility="{Binding ViewModel.SearchResult, Converter={StaticResource IvsNull2Vsby}}">
                                        <local:ArtistViewer Margin="5,10"
                                                        ViewModel="{Binding ViewModel}"
                                                        Artist="{Binding ViewModel.CurrentArtist}"
                                                        Visibility="{Binding ViewModel.CurrentArtist, Converter={StaticResource Null2Vsby}}"/>
                                    </Grid>
                                    <!--Channel List & Search Result-->
                                    <Grid Grid.Row="5" Margin="0,5">
                                        <local:ChannelsViewer ViewModel="{Binding ViewModel}"
                                                          Channels="{Binding ViewModel.Channels}"
                                                          Visibility="{Binding ViewModel.SearchResult, Converter={StaticResource IvsNull2Vsby}}"/>
                                        <local:SearchResultViewer ViewModel="{Binding ViewModel}"
                                                              SearchResult="{Binding ViewModel.SearchResult}"
                                                              Visibility="{Binding ViewModel.SearchResult, Converter={StaticResource Null2Vsby}}"/>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </TabControl.ContentTemplate>
                    </TabControl>
                </Grid>
            </metro:Flyout>
        </metro:FlyoutsControl>
    </metro:MetroWindow.Flyouts>

    <Grid DataContext="{Binding ElementName=Root, Path=ViewModel}">
        <!--Main Content Panel-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Grid Grid.RowSpan="6">
                <Canvas>
                    <Image Source="{Binding MediaManager.SongPicture}" Opacity=".25">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="50"/>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDisylayLyric}"  Value="true">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Effect.Radius" To ="5" Duration="0:0:0.4"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Effect.Radius" To ="50" Duration="0:0:0.4"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Canvas>
            </Grid>
            <!--1 Progress Indicator-->
            <DockPanel Grid.Row="0" Height="14">
                <metro:ProgressIndicator Height="2" DockPanel.Dock="Top" VerticalAlignment="Top"
                                         ProgressColor="WhiteSmoke"
                                         Width="{Binding ElementName=Root, Path=Width}"
                                         Visibility="{Binding MediaManager.IsBuffering, Converter={StaticResource Bool2Visbility}}"/>
            </DockPanel>
            <!--2 Song Photo & Lyric-->
            <Grid Grid.Row="1" VerticalAlignment="Center">
                <Image VerticalAlignment="Top" HorizontalAlignment="Center" Width="240" Height="240"
                       Visibility="{Binding MediaManager.SongPicture, Converter={StaticResource IvsNull2Vsby}}"
                       Source="{StaticResource Vinyl256}" Opacity=".9">
                    <Image.RenderTransform>
                        <RotateTransform Angle="0" />
                    </Image.RenderTransform>
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="RenderTransformOrigin" Value=".5, .5"/>
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard x:Name="PictureRotateStroybard">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" To="360" Duration="0:0:4" RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <DataTrigger Binding="{Binding CurrentSong.Picture, Converter={StaticResource Null2Bool}}" Value="true">
                                    <DataTrigger.EnterActions>
                                        <PauseStoryboard BeginStoryboardName="PictureRotateStroybard"/>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <ResumeStoryboard BeginStoryboardName="PictureRotateStroybard"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Grid Visibility="{Binding Path=CurrentSong, Converter={StaticResource Null2Vsby}}">
                    <!--Song Album Picture-->
                    <cc:ImageButton Command="{Binding ToggleLyricDisplayCmd}" HorizontalAlignment="Center">
                        <cc:ImageButton.Style>
                            <Style TargetType="cc:ImageButton" BasedOn="{StaticResource {x:Type cc:ImageButton}}">
                                <!--<Setter Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="0"/>
                                    </Setter.Value>
                                </Setter>-->
                                <Setter Property="Opacity" Value=".9"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDisylayLyric}"  Value="true">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <!--<DoubleAnimation Storyboard.TargetProperty="Effect.Radius" To ="15" Duration="0:0:0.4"/>-->
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To ="0" Duration="0:0:0.4"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <!--<DoubleAnimation Storyboard.TargetProperty="Effect.Radius" To ="0" Duration="0:0:0.4"/>-->
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To =".9" Duration="0:0:0.4"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </cc:ImageButton.Style>
                        <cc:ImageButton.Image>
                            <StackPanel Orientation="Vertical">
                                <Image x:Name="AlbumPicture" Stretch="Fill" HorizontalAlignment="Center" 
                                       Source="{Binding MediaManager.SongPicture}">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Width">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource MultiplyNum}" ConverterParameter="0.75">
                                                        <Binding ElementName="Root" Path="Width"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Height" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Width}"/>
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <BlurEffect Radius="0"/>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <EventTrigger RoutedEvent="MouseEnter">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To =".7" Duration="0:0:0.3"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <!--This is not working fine-->
                                                <!--<DataTrigger Binding="{Binding MediaManager.SongPicture, Converter={StaticResource Null2Bool}}" Value="True">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0"  To ="1" Duration="0:0:1"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>-->
                                                <EventTrigger RoutedEvent="MouseLeave">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To ="1" Duration="0:0:0.3"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <!--<cc:ControlReflection Host="{Binding ElementName=AlbumPicture}" ReflectionPercent=".3" Opacity=".7"/>-->
                            </StackPanel>
                        </cc:ImageButton.Image>
                    </cc:ImageButton>
                    <!--Song Lyric Containter-->
                    <cc:ImageButton Command="{Binding ToggleLyricDisplayCmd}">
                        <cc:ImageButton.Style>
                            <Style TargetType="cc:ImageButton" BasedOn="{StaticResource {x:Type cc:ImageButton}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=Root, Path=ViewModel}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsDisylayLyric}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Visibility}" Value="Visible">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.3"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0" Duration="0:0:.3"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </cc:ImageButton.Style>
                        <Grid Background="#30222222" 
                              Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}, Path=ActualWidth}"
                              Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}, Path=ActualHeight}">
                            <ScrollViewer x:Name="LrcContaner" IsHitTestVisible="False" Margin="0,8"
                                          HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Hidden">
                                <ItemsControl ItemsSource="{Binding Path=MediaManager.Lyric.Content}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel IsItemsHost="True" Orientation="Vertical" HorizontalAlignment="Center"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock TextAlignment="Center"  TextWrapping="Wrap" Margin="10,3" Text="{Binding Value}" >
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="#FFE0E0E0"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource EquCvt}">
                                                                        <Binding Path="Key"/>
                                                                        <Binding ElementName="Root" Path="ViewModel.MediaManager.CurrnetLrcLine.Value"/>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <Setter Property="Foreground" Value="GreenYellow"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </Grid>
                    </cc:ImageButton>
                </Grid>
            </Grid>
            <!--3 Song Title & Album Title-->
            <StackPanel Grid.Row="2"
                        Orientation="Vertical">
                <StackPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="WhiteSmoke"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                        <!--<Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect ShadowDepth="5" BlurRadius="15" />
                            </Setter.Value>
                        </Setter>-->
                    </Style>
                </StackPanel.Resources>
                <TextBlock Text="{Binding CurrentSong.Title}" FontSize="14" Margin="0,3" 
                           ToolTip="{Binding CurrentSong.Title}"/>
                <TextBlock FontSize="11"
                           Visibility="{Binding Path=CurrentSong, Converter={StaticResource Null2Vsby}}">
                        <Run Text="{Binding Path=CurrentSong.Artist}"/>
                        <Run Text=" &lt;"/>
                        <Run Text="{Binding CurrentSong.AlbumTitle}"/>
                        <Run Text="&gt;"/>
                </TextBlock>
            </StackPanel>
            <!--4 Control Btns-->
            <Grid Grid.Row="3"
                  IsEnabled="{Binding CurrentSong, Converter={StaticResource Null2Bool}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource MetroCircleButtonStyle}">
                        <Setter Property="Height" Value="50"/>
                        <Setter Property="Width" Value="50"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="WhiteSmoke"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Account.AccountInfo}" Value="{x:Null}">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding OfflineMgt.IsInternetConnected}" Value="false">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="cc:ColorlizeImage">
                        <Setter Property="Height" Value="20"/>
                        <Setter Property="Width" Value="20"/>
                        <Setter Property="Color" Value="WhiteSmoke"/>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Color" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <Button Grid.Column="0" Command="{Binding LikeSongCmd}"
                        ToolTip="{lex:LocText Localization:English:LikeSong}">
                    <cc:ColorlizeImage Image="{StaticResource Heart32}" >
                        <cc:ColorlizeImage.Style>
                            <Style TargetType="cc:ColorlizeImage" BasedOn="{StaticResource {x:Type cc:ColorlizeImage}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentSong.Like}" Value="1">
                                        <Setter Property="Color" Value="#FFEE3D3D"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </cc:ColorlizeImage.Style>
                    </cc:ColorlizeImage>
                </Button>
                <Button Grid.Column="1"
                        Command="{Binding LikeSongCmd}"
                        CommandParameter="1"
                        ToolTip="{lex:LocText Localization:English:HateSong}">
                    <cc:ColorlizeImage Image="{StaticResource Delete32}"/>
                </Button>
                <Button Grid.Column="2" 
                        Command="{Binding NextSongCmd}"
                        IsEnabled="{Binding SongList.Count, Converter={StaticResource Num2Bool}}"
                        ToolTip="{lex:LocText Localization:English:NextSong}">
                    <cc:ColorlizeImage Image="{StaticResource Next32}"/>
                </Button>
            </Grid>
            <!--5 Playing Progress Time Line-->
            <Grid Grid.Row="4">
                <Grid.Resources>
                    <Style TargetType="Rectangle">
                        <Setter Property="Height" Value="1"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <!--<DockPanel Grid.Row="1" Margin="5,0">
                    <DockPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Foreground" Value="WhiteSmoke"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MediaManager.IsPlaying}" Value="False">
                                    <Setter Property="Opacity" Value=".8"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Resources>
                    <TextBlock Text="{Binding MediaManager.Position, Mode=OneWay, Converter={StaticResource Time2Str}}" DockPanel.Dock="Left"/>
                    <TextBlock Text="{Binding MediaManager.SongLength, Mode=OneWay, Converter={StaticResource Time2Str}}" DockPanel.Dock="Right"/>
                    <Grid DockPanel.Dock="Right"/>
                </DockPanel>-->
                <Rectangle Grid.Row="0" Fill="#20CCCCCC"  Width="{Binding ElementName=Root, Path=Width}"/>

                <Rectangle Grid.Row="0" Fill="WhiteSmoke" Opacity=".4">
                    <Rectangle.Width>
                        <MultiBinding Converter="{StaticResource MultiplyNum}">
                            <MultiBinding.Bindings>
                                <Binding Path="MediaManager.DownloadProgress"/>
                                <Binding ElementName="Root" Path="Width"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Rectangle.Width>
                </Rectangle>

                <Rectangle Grid.Row="0" Fill="WhiteSmoke">
                    <Rectangle.Width>
                        <MultiBinding Converter="{StaticResource MultiplyNum}">
                            <MultiBinding.Bindings>
                                <Binding Path="MediaManager.PlayProgress"/>
                                <Binding ElementName="Root" Path="Width"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Rectangle.Width>
                </Rectangle>
            </Grid>
            <!--6 Pause, volume, download btns-->
            <Grid Grid.Row="5"  Margin="0,8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style TargetType="cc:ImageButton" BasedOn="{StaticResource {x:Type cc:ImageButton}}">
                        <Setter Property="Height" Value="14"/>
                        <Setter Property="Width" Value="14"/>
                    </Style>
                    <Style TargetType="cc:ColorlizeImage">
                        <Setter Property="Height" Value="{Binding Path=Height, RelativeSource={RelativeSource FindAncestor, AncestorType=cc:ImageButton}}"/>
                        <Setter Property="Width" Value="{Binding Path=Width, RelativeSource={RelativeSource FindAncestor, AncestorType=cc:ImageButton}}"/>
                        <Setter Property="Color" Value="WhiteSmoke"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value=".8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value=".8"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="WhiteSmoke"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MediaManager.IsPlaying}" Value="False">
                                <Setter Property="Opacity" Value=".8"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="Slider" BasedOn="{StaticResource FlatSlider}">
                        <Setter Property="Minimum" Value="0"/>
                        <Setter Property="Maximum" Value="1"/>
                        <Setter Property="LargeChange" Value=".2"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="Foreground" Value="#FFF5F5F5"/>
                        <Setter Property="Background" Value="#78F5F5F5"/>
                        <Setter Property="BorderBrush" Value="#FF333333" />
                        <Setter Property="Cursor" Value="Hand"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#FFF5F5F5" />
                                <Setter Property="Background" Value="#78F5F5F5" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <cc:ImageButton Grid.Column="0"
                                IsEnabled="{Binding CurrentSong, Converter={StaticResource Null2Bool}}"
                                Command="{Binding MediaManager.PauseResumePlayerCmd}"
                                Width="14">
                    <cc:ImageButton.Image>
                        <cc:ColorlizeImage>
                            <cc:ColorlizeImage.Style>
                                <Style TargetType="cc:ColorlizeImage" BasedOn="{StaticResource {x:Type cc:ColorlizeImage}}">
                                    <Setter Property="Image" Value="{StaticResource Play32}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MediaManager.IsPlaying}" Value="True">
                                            <Setter Property="Image" Value="{StaticResource Pause32}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </cc:ColorlizeImage.Style>
                        </cc:ColorlizeImage>
                    </cc:ImageButton.Image>
                </cc:ImageButton>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <TextBlock Text="{Binding MediaManager.Position, Mode=OneWay, Converter={StaticResource Time2Str}}"/>
                    <TextBlock Text=" / "/>
                    <TextBlock Text="{Binding MediaManager.SongLength, Mode=OneWay, Converter={StaticResource Time2Str}}"/>
                </StackPanel>
                <cc:ImageButton Grid.Column="2" HorizontalAlignment="Right"
                                Visibility="{Binding MediaManager.Volume, Converter={StaticResource Num2Visbility}}"
                                Command="{Binding MediaManager.MutePlayerCmd}">
                    <cc:ImageButton.Image>
                        <cc:ColorlizeImage Image="{StaticResource Volume32}"/>
                    </cc:ImageButton.Image>
                </cc:ImageButton>
                <cc:ImageButton Grid.Column="2" HorizontalAlignment="Right"
                                Visibility="{Binding MediaManager.Volume, Converter={StaticResource IvsNum2Vsbty}}"
                                Command="{Binding MediaManager.MutePlayerCmd}">
                    <cc:ImageButton.Image>
                        <cc:ColorlizeImage Image="{StaticResource Mute32}"/>
                    </cc:ImageButton.Image>
                </cc:ImageButton>
                <Slider Grid.Column="3" Height="1" Width="60" Value="{Binding MediaManager.Volume}"/>
                <!--Set a transparent slider for earier operation-->
                <Slider Grid.Column="3" Width="60" Value="{Binding MediaManager.Volume}">
                    <Slider.Style>
                        <Style TargetType="Slider" BasedOn="{StaticResource {x:Type Slider}}">
                            <Setter Property="Height" Value="16"/>
                            <Setter Property="Foreground" Value="#00FFFFFF"/>
                            <Setter Property="Background" Value="#00FFFFFF"/>
                            <Setter Property="BorderBrush" Value="#00FFFFFF" />
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#00FFFFFF" />
                                    <Setter Property="Background" Value="#00FFFFFF" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Slider.Style>
                </Slider>
                <!--Download Btn & Download Progress Text-->
                <StackPanel Grid.Column="4" Orientation="Horizontal" HorizontalAlignment="Center">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=BtnOpenFolad, Path=Visibility}" 
                                             Value="{x:Static Visibility.Visible}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <cc:ImageButton IsEnabled="{Binding CurrentSong, Converter={StaticResource Null2Bool}}"
                                    Command="{Binding DownloadSongCmd}"
                                    Visibility="{Binding IsDownlading, Converter={StaticResource IvsBooltVsby}}">
                        <cc:ImageButton.Image>
                            <cc:ColorlizeImage Image="{StaticResource Download32}"/>
                        </cc:ImageButton.Image>
                    </cc:ImageButton>
                    <!--Download Progress Text-->
                    <TextBlock HorizontalAlignment="Center"
                               Text="{Binding DownloadProgress, StringFormat='{}{0}%'}"
                               Visibility="{Binding IsDownlading, Converter={StaticResource Bool2Visbility}}"/>
                </StackPanel>
                <!--Open Download Folder Btn-->
                <cc:ImageButton Grid.Column="4" x:Name="BtnOpenFolad"
                                Command="{Binding OpenDownloadFolderCmd}">
                    <cc:ImageButton.Visibility>
                        <MultiBinding Converter="{StaticResource Equ2Vsbty}" ConverterParameter="100">
                            <Binding Path="DownloadProgress"/>
                        </MultiBinding>
                    </cc:ImageButton.Visibility>
                    <cc:ImageButton.Image>
                        <cc:ColorlizeImage Image="{StaticResource Folder32}"/>
                    </cc:ImageButton.Image>
                </cc:ImageButton>
            </Grid>
        </Grid>
    </Grid>
</metro:MetroWindow>