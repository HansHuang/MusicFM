<UserControl x:Class="MusicFm.Controls.ChannelsViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:cc="clr-namespace:CustomControlResources;assembly=CustomControlResources"
             xmlns:cvt="clr-namespace:CustomControlResources.Converter;assembly=CustomControlResources"
             xmlns:lex="http://schemas.root-project.org/xaml/presentation"
             mc:Ignorable="d" x:Name="Root">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CustomControlResources;component/ImageResource.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/CustomControlResources;component/ControlStyleResources.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/CustomControlResources;component/Style/ScrollViewer.xaml"/>
                <ResourceDictionary>
                    <Style TargetType="Border" x:Key="ChannelCell">
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                                    <GradientStop Color="#993a3a3a" Offset="0.0" />
                                    <GradientStop Color="#99121212" Offset="1" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Margin" Value="3" />
                        <Setter Property="Width" Value="95"/>
                        <Setter Property="Height" Value="25"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
                <!--Converter Resource Dictionary-->
                <ResourceDictionary>
                    <cvt:EqualiencyToVisibilityConverter x:Key="Equ2Vsbty"/>
                    <cvt:EqualiencyConverter x:Key="EquCvt"/>
                    <BooleanToVisibilityConverter x:Key="Bool2Vsbty"/>
                    <cvt:InverseBoolToVisibilityConverter x:Key="IvsB2V"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer x:Name="ListViewer" DataContext="{Binding ElementName=Root}" 
                  PreviewMouseWheel="OnPreviewMouseWheel">
        <ScrollViewer.Style>
            <Style TargetType="ScrollViewer" BasedOn="{StaticResource MyScrollViewer}">
                <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=ListViewer, Path=IsMouseOver}" Value="true">
                        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ScrollViewer.Style>
        <ItemsControl ItemsSource="{Binding Channels}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Left"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border Style="{StaticResource ChannelCell}">
                        <Grid>
                            <cc:ImageButton HorizontalAlignment="Right" VerticalAlignment="Center" Opacity=".8"
                                            Command="{Binding ElementName=Root, Path=ViewModel.OfflineMgt.SetChannelOfflineCmd}"
                                            CommandParameter="{Binding }"
                                            Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Border}, Path=IsMouseOver, Converter={StaticResource Bool2Vsbty}}">
                                <Grid>
                                    <cc:ColorlizeImage Color="WhiteSmoke" Width="12" Height="12" 
                                                       Visibility="{Binding IsOfflined, Converter={StaticResource Bool2Vsbty}}">
                                        <cc:ColorlizeImage.Style>
                                            <Style TargetType="cc:ColorlizeImage" BasedOn="{StaticResource {x:Type cc:ColorlizeImage}}">
                                                <Setter Property="Image" Value="{StaticResource CloudDownload32}"/>
                                                <Setter Property="ToolTip" Value="{Binding DownloadProgress, StringFormat={}{0} %}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding DownloadProgress}" Value="100">
                                                        <Setter Property="ToolTip" Value="{lex:LocText Localization:English:CleanOffline}"/>
                                                        <Setter Property="Image" Value="{StaticResource Delete32}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </cc:ColorlizeImage.Style>
                                    </cc:ColorlizeImage>
                                    <cc:ColorlizeImage Image="{StaticResource Plus32}" Color="WhiteSmoke" Width="12" Height="12"
                                                       Visibility="{Binding IsOfflined, Converter={StaticResource IvsB2V}}"
                                                       ToolTip="{lex:LocText Localization:English:SetOffline}"/>
                                </Grid>
                            </cc:ImageButton>
                            <cc:ImageButton Command="{Binding ElementName=Root, Path=ViewModel.SetChannelCmd}"
                                            CommandParameter="{Binding }" ToolTip="{Binding Name}">
                                <cc:ImageButton.Image>
                                    <cc:GifImage Width="11" Height="11" Margin="3,0" Source="{StaticResource CrtChelStr}" x:Name="GifImage">
                                        <cc:GifImage.Visibility>
                                            <MultiBinding Converter="{StaticResource Equ2Vsbty}">
                                                <Binding />
                                                <Binding ElementName="Root" Path="ViewModel.CurrentChannel" />
                                            </MultiBinding>
                                        </cc:GifImage.Visibility>
                                    </cc:GifImage>
                                </cc:ImageButton.Image>
                                <TextBlock Text="{Binding Name}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="Foreground" Value="WhiteSmoke"/>
                                            <Style.Triggers>
                                                <DataTrigger Value="{x:Static cc:BooleanClass.True}" >
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource EquCvt}">
                                                            <Binding />
                                                            <Binding ElementName="Root" Path="ViewModel.CurrentChannel"/>
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="Foreground" Value="CornflowerBlue"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </cc:ImageButton>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </ScrollViewer>
</UserControl>
